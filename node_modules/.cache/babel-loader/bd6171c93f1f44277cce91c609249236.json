{"remainingRequest":"/Users/andrewdame/Desktop/repos/card-matcher/card-matcher/node_modules/thread-loader/dist/cjs.js!/Users/andrewdame/Desktop/repos/card-matcher/card-matcher/node_modules/babel-loader/lib/index.js!/Users/andrewdame/Desktop/repos/card-matcher/card-matcher/node_modules/eslint-loader/index.js??ref--13-0!/Users/andrewdame/Desktop/repos/card-matcher/card-matcher/src/logic/gameInit.js","dependencies":[{"path":"/Users/andrewdame/Desktop/repos/card-matcher/card-matcher/src/logic/gameInit.js","mtime":1609047943260},{"path":"/Users/andrewdame/Desktop/repos/card-matcher/card-matcher/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/andrewdame/Desktop/repos/card-matcher/card-matcher/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/andrewdame/Desktop/repos/card-matcher/card-matcher/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/andrewdame/Desktop/repos/card-matcher/card-matcher/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuc3BsaWNlLmpzIjsKaW1wb3J0IF90b0NvbnN1bWFibGVBcnJheSBmcm9tICIvVXNlcnMvYW5kcmV3ZGFtZS9EZXNrdG9wL3JlcG9zL2NhcmQtbWF0Y2hlci9jYXJkLW1hdGNoZXIvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL3RvQ29uc3VtYWJsZUFycmF5IjsKdmFyIGNhcmRNYWluTGlzdCA9IFsnY2F0JywgJ2Nyb3cnLCAnZHJhZ29uJywgJ2hvcnNlJywgJ2hhbWJ1cmdlcicsICdwaXp6YS1zbGljZScsICdjYXJyb3QnLCAnY2FuZHktY2FuZScsICdjb29raWUnXTsKdmFyIE1BWF9MRU5HVEggPSBjYXJkTWFpbkxpc3QubGVuZ3RoOwoKdmFyIHJhbmRvbUFycmF5SW5kZXggPSBmdW5jdGlvbiByYW5kb21BcnJheUluZGV4KGxlbmd0aCkgewogIHJldHVybiBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiBsZW5ndGgpOwp9OwoKdmFyIHJhbmRvbWl6ZUFycmF5ID0gZnVuY3Rpb24gcmFuZG9taXplQXJyYXkoYXJyKSB7CiAgdmFyIGxpbWl0ID0gYXJndW1lbnRzLmxlbmd0aCA+IDEgJiYgYXJndW1lbnRzWzFdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMV0gOiBudWxsOwoKICB2YXIgYXJyRHVwID0gX3RvQ29uc3VtYWJsZUFycmF5KGFycik7CgogIHZhciByYW5kb21BcnJheSA9IFtdOwogIHZhciBudW0gPSBsaW1pdCA9PT0gbnVsbCA/IGFyckR1cC5sZW5ndGggOiBsaW1pdDsKCiAgZm9yICh2YXIgaSA9IDA7IGkgPCBudW07ICsraSkgewogICAgdmFyIGluZGV4ID0gcmFuZG9tQXJyYXlJbmRleChhcnJEdXAubGVuZ3RoKTsKICAgIHJhbmRvbUFycmF5LnB1c2goYXJyRHVwW2luZGV4XSk7CiAgICBhcnJEdXAuc3BsaWNlKGluZGV4LCAxKTsKICB9CgogIHJldHVybiByYW5kb21BcnJheTsKfTsKCnZhciBnZW5lcmF0ZUNhcmRMaXN0ID0gZnVuY3Rpb24gZ2VuZXJhdGVDYXJkTGlzdCgpIHsKICB2YXIgbGltID0gYXJndW1lbnRzLmxlbmd0aCA+IDAgJiYgYXJndW1lbnRzWzBdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMF0gOiAzOwogIC8vIFJhbmRvbWl6ZSBpbml0aWFsIGNhcmQgbGlzdCB3aXRoIGxpbWl0CiAgdmFyIHJhbmRvbUNhcmRMaXN0ID0gcmFuZG9taXplQXJyYXkoY2FyZE1haW5MaXN0LCBsaW0pOyAvLyBEdXBsaWNhdGUgZWxlbWVudHMgaW4gbGlzdAoKICByYW5kb21DYXJkTGlzdC5wdXNoLmFwcGx5KHJhbmRvbUNhcmRMaXN0LCBfdG9Db25zdW1hYmxlQXJyYXkocmFuZG9tQ2FyZExpc3QpKTsgLy8gUmFuZG9taXplIGVsZW1lbnRzIGFnYWluIChubyBsaW1pdCkKCiAgcmV0dXJuIHJhbmRvbWl6ZUFycmF5KHJhbmRvbUNhcmRMaXN0KTsKfTsKCmV4cG9ydCB7IE1BWF9MRU5HVEggfTsKZXhwb3J0IGRlZmF1bHQgZ2VuZXJhdGVDYXJkTGlzdDs="},{"version":3,"sources":["/Users/andrewdame/Desktop/repos/card-matcher/card-matcher/src/logic/gameInit.js"],"names":["cardMainList","MAX_LENGTH","length","randomArrayIndex","Math","floor","random","randomizeArray","arr","limit","arrDup","randomArray","num","i","index","push","splice","generateCardList","lim","randomCardList"],"mappings":";;AAAA,IAAMA,YAAY,GAAG,CACjB,KADiB,EACV,MADU,EACF,QADE,EACQ,OADR,EACiB,WADjB,EAC+B,aAD/B,EAC8C,QAD9C,EACwD,YADxD,EACsE,QADtE,CAArB;AAIA,IAAMC,UAAU,GAAGD,YAAY,CAACE,MAAhC;;AAEA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACD,MAAD,EAAY;AACjC,SAAOE,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBJ,MAA3B,CAAP;AACH,CAFD;;AAIA,IAAMK,cAAc,GAAG,SAAjBA,cAAiB,CAACC,GAAD,EAAuB;AAAA,MAAjBC,KAAiB,uEAAT,IAAS;;AAC1C,MAAIC,MAAM,sBAAOF,GAAP,CAAV;;AACA,MAAIG,WAAW,GAAG,EAAlB;AACA,MAAIC,GAAG,GAAGH,KAAK,KAAK,IAAV,GAAiBC,MAAM,CAACR,MAAxB,GAAiCO,KAA3C;;AACA,OAAK,IAAII,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,GAApB,EAAyB,EAAEC,CAA3B,EAA8B;AAC1B,QAAIC,KAAK,GAAGX,gBAAgB,CAACO,MAAM,CAACR,MAAR,CAA5B;AACAS,IAAAA,WAAW,CAACI,IAAZ,CAAiBL,MAAM,CAACI,KAAD,CAAvB;AACAJ,IAAAA,MAAM,CAACM,MAAP,CAAcF,KAAd,EAAqB,CAArB;AACH;;AACD,SAAOH,WAAP;AACH,CAVD;;AAYA,IAAMM,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAa;AAAA,MAAZC,GAAY,uEAAN,CAAM;AAClC;AACA,MAAIC,cAAc,GAAGZ,cAAc,CAACP,YAAD,EAAekB,GAAf,CAAnC,CAFkC,CAGlC;;AACAC,EAAAA,cAAc,CAACJ,IAAf,OAAAI,cAAc,qBAASA,cAAT,EAAd,CAJkC,CAKlC;;AACA,SAAOZ,cAAc,CAACY,cAAD,CAArB;AACH,CAPD;;AASA,SAASlB,UAAT;AAEA,eAAegB,gBAAf","sourcesContent":["const cardMainList = [\n    'cat', 'crow', 'dragon', 'horse', 'hamburger',  'pizza-slice', 'carrot', 'candy-cane', 'cookie', \n]\n\nconst MAX_LENGTH = cardMainList.length;\n\nconst randomArrayIndex = (length) => {\n    return Math.floor(Math.random() * length)\n}\n\nconst randomizeArray = (arr, limit = null) => {\n    let arrDup = [...arr];\n    let randomArray = [];\n    let num = limit === null ? arrDup.length : limit;\n    for (let i = 0; i < num; ++i) {\n        let index = randomArrayIndex(arrDup.length);\n        randomArray.push(arrDup[index]);\n        arrDup.splice(index, 1);\n    }\n    return randomArray;\n}\n\nconst generateCardList = (lim = 3) => {\n    // Randomize initial card list with limit\n    let randomCardList = randomizeArray(cardMainList, lim);\n    // Duplicate elements in list\n    randomCardList.push(...randomCardList)\n    // Randomize elements again (no limit)\n    return randomizeArray(randomCardList);\n}\n\nexport { MAX_LENGTH };\n\nexport default generateCardList;\n\n\n\n\n"]}]}